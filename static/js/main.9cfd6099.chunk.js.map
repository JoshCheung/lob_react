{"version":3,"sources":["components/js/ListRecipients.js","components/js/PostCardForm.js","App.js","reportWebVitals.js","index.js"],"names":["ListRecipients","props","state","address","console","log","this","selectAddress","toggleModal","className","Table","TableBody","addresses","map","index","TableRow","onClick","TableCell","name","address_line1","address_line2","address_city","address_state","address_zip","address_country","align","id","Component","PostCardForm","filtered","search","recipientInputModal","selectedAddress","recipientInputChange","bind","getItems","person1","person2","require","list","then","res","setState","data","sort","compare","catch","e","value","target","toUpperCase","filter","query","index1","indexOf","index2","classes","Paper","root","component","InputBase","input","placeholder","length","onChange","cancel","onCancel","Button","variant","color","button","testing","withStyles","theme","padding","alignItems","boxShadow","marginLeft","spacing","flex","height","display","palette","getContrastText","backgroundColor","textTransform","width","cursor","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9cfd6099.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport { Scrollbars } from 'react-custom-scrollbars';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableRow from '@material-ui/core/TableRow';\nimport \"../css/ListRecipients.css\";\n\nclass ListRecipients extends Component {\n    constructor (props) {\n        super(props);\n        this.state = {\n            \n        }\n    }\n\n\n    selectAddress(address) {\n        console.log(address);\n        this.props.selectAddress(address);\n        this.props.toggleModal();\n    }\n    \n\n    render() {\n        return (\n            <div className=\"list-container\">\n                <Scrollbars>\n                    <Table>\n                        <TableBody>\n                            {\n                                this.props.addresses.map((address, index) => \n                                    <TableRow \n                                        key={index}\n                                        onClick={() => this.selectAddress(address)}>\n\n                                        <TableCell>\n                                                <p className=\"name-text\">\n                                                    {address.name}\n                                                </p>\n                                                <p className=\"address-text\">\n                                                    {address.address_line1} {address.address_line2} \n                                                    <br></br>\n                                                    {address.address_city} {address.address_state} {address.address_zip} \n                                                    <br></br>\n                                                    {address.address_country}\n                                                </p>\n                                        </TableCell>\n                                        <TableCell align={\"center\"}>\n                                            <p className=\"address-id\" >\n                                                {address.id}\n                                            </p>\n                                        </TableCell>\n                                    </TableRow>\n                                )   \n                            }\n                        </TableBody>\n                    </Table>\n                </Scrollbars>\n            </div>\n        );\n    }\n}\nexport default ListRecipients;\n\n\n\n\n// {/* ","import React, { Component } from \"react\";\nimport \"../css/PostCardForm.css\";\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Paper from \"@material-ui/core/Paper\";\nimport InputBase from \"@material-ui/core/InputBase\";\nimport ListRecipients from \"./ListRecipients.js\";\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableRow from '@material-ui/core/TableRow';\n\n\nconst useStyles = theme => ({\n    root: {\n      padding: \"2px 4px\",\n      alignItems: \"left\",\n      boxShadow: \"0 0 8px rgba(0, 0, 0, 0.25)\",\n    },\n    input: {\n      marginLeft: theme.spacing(1),\n      flex: 1,\n      height: \"3.5vh\",\n      display: \"flex\"\n    },\n    button: {\n        color: theme.palette.getContrastText('#0499D7'),\n        backgroundColor: \"#0499D7\",\n        textTransform: \"none\",\n        display: \"flex\",\n        height: \"3.5vh\",\n        width: \"25%\",\n        \"&:hover\": {\n          backgroundColor: \"#0499D7\"\n        }\n    },\n    address: {\n        width: \"100%\",\n        padding: \"2px 4px\",\n        display: \"flex\",\n        alignItems: \"left\",\n        boxShadow: \"0 0 8px rgba(0, 0, 0, 0.25)\",\n    },\n    cancel: {\n        cursor: \"pointer\"\n    },\n});\n\n\nclass PostCardForm extends Component {\n    constructor (props) {\n        super(props);\n        this.state = {\n            addresses: [],\n            filtered: [],\n            search: '',\n            recipientInputModal: false,\n            selectedAddress: []\n\n            \n        }\n        this.recipientInputChange = this.recipientInputChange.bind(this);\n        this.selectAddress = this.selectAddress.bind(this);\n        this.toggleModal = this.toggleModal.bind(this);\n\n    }\n    componentDidMount() {\n        this.getItems();\n    }\n\n    compare(person1, person2 ) {\n        if (person1.name > person2.name){\n            return 1;\n        }\n        if (person1.name < person2.name){\n            return -1;\n        }\n        return 0;\n    }\n\n    getItems() {\n        // var url = 'https://api.lob.com/v1/addresses/test_8ddaad35dc02260ae8a4e6e33d9f3ade7ae:';\n        // fetch(url).then( response => {\n        //     console.log(response.json);\n        // })\n        var Lob = require('lob')('test_8ddaad35dc02260ae8a4e6e33d9f3ade7ae');\n        Lob.addresses.list()\n            .then((res) => {\n                this.setState({\n                    addresses: res.data\n                })\n                this.state.addresses.sort(this.compare);\n            // console.log(res.data);\n            })\n            .catch((e) => {\n            console.log(e);\n        });\n        \n        // var searchUrl = 'https://api.lob.com/v1/search?q=\"testing\"';\n        // fetch(searchUrl).then( response => {\n        //     console.log(response.json);\n        // })\n        // console.log(Lob);\n    }\n\n    recipientInputChange(e) {\n        var value = e.target.value\n        if (e.target.value !== '') {\n            this.setState({\n                search: value.toUpperCase(),\n                recipientInputModal: true,\n            });\n        }\n        else {\n            this.setState({\n                recipientInputModal: false,\n            });\n        }\n        // let filter = this.state.addresses.filter(address => { return address.name.toUpperCase().includes(value.toUpperCase())});\n        let filter = this.state.addresses.sort(this.filter(value.toUpperCase()));\n        this.setState({\n            filtered: filter\n        })\n        // console.log(filter);\n    }\n\n    filter(query) {\n        return function(person1, person2) {\n            // const person1Name = person1.name.split(/\\s+/); //split by any amount of spaces\n            // const person2Name = person2.name.split(/\\s+/);\n\n            // var index1 = person1Name[0].indexOf(query); //check index of searched item\n            // var index2 = person2Name[0].indexOf(query);\n            var index1 = person1.name.indexOf(query); //check index of searched item in name\n            var index2 = person2.name.indexOf(query);\n\n            if (index1 === -1 && index1 < index2) {     //if searched item does not exist for each name\n                return 1;                               //has higher precedence in name2 if not found name1\n            }\n            else if (index2 === -1 && index1 > index2) { \n                return -1;                              //has higher precedence in name1 if not found name2\n            }   \n            else if (index1 > index2) {                 //name2 has higher precedence if indexOf is smaller than name1\n                return 1;\n            } \n            else if (index1 < index2) {                 //name1 has higher precedence if indexOf is smaller than name2\n                return -1;\n            }\n            else {              \n                if(person1.name < person2.name)         //if either are not found then compare names in general\n                    return 1;\n                else\n                    return -1;\n            }\n        };\n    }\n\n    toggleModal(){\n        this.setState({\n            recipientInputModal: false,\n        });\n    }\n\n    \n    selectAddress(address) {\n        this.setState({\n            selectedAddress: address\n        });\n    }\n\n    onCancel() {\n        this.setState({\n            selectedAddress: [],\n            search: '',\n        })\n        this.toggleModal();\n    }\n\n    render() {\n        \n        const { classes } = this.props;\n\n        return (\n            <div className=\"form-component\">\n\n                <p className=\"form-lables\">\n                    Description:\n                </p>\n                <Paper className={classes.root} component=\"form\">\n                    <InputBase className={classes.input} placeholder=\"Describe the mail\"/>\n                </Paper>\n\n                <br/>\n\n                <p className=\"form-lables\">\n                    To:\n                </p>\n\n                { this.state.selectedAddress.length === 0 ?  \n                    <Paper className={classes.root} component=\"form\">\n                        <InputBase \n                        className={classes.input} \n                        onChange={this.recipientInputChange}\n                        placeholder=\"Recipient Name\"/>\n                    </Paper>\n                    :\n                    <Table className={classes.root}>\n                        <TableBody>\n                            <TableRow>\n                                <TableCell>\n                                        <p className=\"name-text\">\n                                            {this.state.selectedAddress.name}\n                                        </p>\n                                        <p className=\"address-text\">\n                                            {this.state.selectedAddress.address_line1} {this.state.selectedAddress.address_line2} \n                                            <br></br>\n                                            {this.state.selectedAddress.address_city} {this.state.selectedAddress.address_state} {this.state.selectedAddress.address_zip} \n                                            <br></br>\n                                            {this.state.selectedAddress.address_country}\n                                        </p>\n                                </TableCell>\n                                <TableCell align={\"center\"}>\n                                    <p className=\"address-id\" >\n                                        {this.state.selectedAddress.id}\n                                    </p>\n                                </TableCell>\n                                <TableCell \n                                    align={\"center\"} \n                                    className={classes.cancel}\n                                    onClick={() => this.onCancel()}>\n                                    <p className=\"address-id\" >\n                                        X\n                                    </p>\n                                </TableCell>\n                            </TableRow>\n                        </TableBody>\n                    </Table>\n                }\n\n                \n                { this.state.recipientInputModal &&\n                    <ListRecipients \n                        selectAddress={this.selectAddress} \n                        toggleModal={this.toggleModal}\n                        addresses={this.state.filtered}/> \n                }\n\n                <br/>\n                <p className=\"form-lables\">\n                    From:\n                </p>\n                <Paper className={classes.root} component=\"form\">\n                    <InputBase className={classes.input} placeholder=\"Describe\"/>\n                </Paper>\n                <br/>\n                <p className=\"form-lables\">\n                    Front:\n                </p>\n                <Paper className={classes.root} component=\"form\">\n                    <InputBase className={classes.input} placeholder=\"\"/>\n                </Paper>\n                <br/>\n                <p className=\"form-lables\">\n                    Back:\n                </p>\n                <Paper className={classes.root} component=\"form\">\n                    <InputBase className={classes.input} placeholder=\"\"/>\n                </Paper>\n                <br/>\n                <Button\n                    variant=\"contained\"\n                    color=\"primary\"\n                    className={classes.button}\n                    onClick={() => { this.testing()}}>\n                    Submit\n                </Button>\n            </div>\n        );\n    }\n}\n\nexport default withStyles(useStyles)(PostCardForm);","import './App.css';\nimport React from 'react';\nimport PostCardForm from './components/js/PostCardForm.js';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <PostCardForm/>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}